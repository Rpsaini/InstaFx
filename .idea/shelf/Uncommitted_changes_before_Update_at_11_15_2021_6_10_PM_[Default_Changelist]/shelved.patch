Index: app/src/main/java/com/web/instafx/fragments/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.web.instafx.fragments;\r\n\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport com.app.dialogsnpickers.DialogCallBacks;\r\nimport com.app.vollycommunicationlib.CallBack;\r\nimport com.app.vollycommunicationlib.ServerHandler;\r\nimport com.web.instafx.DefaultConstants;\r\nimport com.web.instafx.MainActivity;\r\nimport com.web.instafx.R;\r\nimport com.web.instafx.adapters.CurrencyPagerAdapter;\r\nimport com.web.instafx.adapters.MarketAdapter;\r\nimport com.web.instafx.communication.SocketHandlers;\r\nimport com.google.android.material.tabs.TabLayout;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport io.socket.emitter.Emitter;\r\n\r\npublic class HomeFragment extends Fragment {\r\n    private View view;\r\n    private MainActivity mainActivity;\r\n\r\n\r\n    public static Map<String, JSONArray> commonMap = new HashMap<>();\r\n    public static ArrayList<JSONObject> tabsHeaderKeys = new ArrayList<>();\r\n    public static Map<Integer, MarketAdapter> marketAdapterMap = new HashMap<>();\r\n    int pagerselectedPos = 0;\r\n\r\n\r\n    CurrencyPagerAdapter adapter;\r\n\r\n\r\n    public HomeFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    public static HomeFragment newInstance(String param1, String param2) {\r\n        HomeFragment fragment = new HomeFragment();\r\n        Bundle args = new Bundle();\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if(getArguments() != null)\r\n        {\r\n\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n\r\n        view = inflater.inflate(R.layout.fragment_home, container, false);\r\n        mainActivity = (MainActivity) getActivity();\r\n        getMarketTickers();\r\n\r\n        return view;\r\n    }\r\n\r\n\r\n    TabLayout tabLayout;\r\n    ViewPager viewPager;\r\n\r\n    private void initView() {\r\n        tabLayout = (TabLayout) view.findViewById(R.id.tab_layout);\r\n        tabLayout.setSelectedTabIndicatorColor(Color.parseColor(\"#13B351\"));\r\n        for (int x = 0; x < tabsHeaderKeys.size(); x++) {\r\n            try {\r\n                JSONObject datObj = tabsHeaderKeys.get(x);\r\n                tabLayout.addTab(tabLayout.newTab().setText(datObj.getString(\"pair_name\")));\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n        tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);\r\n        viewPager = (ViewPager) view.findViewById(R.id.pager);\r\n\r\n\r\n    }\r\n\r\n    void tablayout() {\r\n        if (tabLayout != null) {\r\n            adapter = new CurrencyPagerAdapter(getActivity().getSupportFragmentManager(), tabLayout.getTabCount());\r\n            viewPager.setAdapter(adapter);\r\n            viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));\r\n\r\n            tabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\r\n                @Override\r\n                public void onTabSelected(TabLayout.Tab tab) {\r\n                    viewPager.setCurrentItem(tab.getPosition());\r\n                    pagerselectedPos = tab.getPosition();\r\n                }\r\n\r\n                @Override\r\n                public void onTabUnselected(TabLayout.Tab tab) {\r\n                }\r\n\r\n                @Override\r\n                public void onTabReselected(TabLayout.Tab tab) {\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    private void getMarketTickers() {\r\n        try {\r\n            final Map<String, String> m = new HashMap<>();\r\n            m.put(\"token\", mainActivity.savePreferences.reterivePreference(mainActivity, DefaultConstants.token) + \"\");\r\n            m.put(\"DeviceToken\", mainActivity.getDeviceToken() + \"\");\r\n\r\n             final Map<String, String> obj = new HashMap<>();\r\n             obj.put(\"X-API-KEY\", mainActivity.getXapiKey());\r\n             obj.put(\"Rtoken\", mainActivity.getNewRToken() + \"\");\r\n\r\n\r\n             new ServerHandler().sendToServer(mainActivity, mainActivity.getApiUrl() + \"get-home-data\", m, 0, obj, 20000, R.layout.progressbar, new CallBack() {\r\n                @Override\r\n                public void getRespone(String dta, ArrayList<Object> respons) {\r\n                    try {\r\n                        JSONObject jsonObject = new JSONObject(dta);\r\n                        JSONArray termArray=jsonObject.getJSONArray(\"term_array\");\r\n                        tabsHeaderKeys=new ArrayList<>();\r\n                        for(int x=0;x<termArray.length();x++)\r\n                        {\r\n                            JSONObject headerObj=new JSONObject();\r\n                            headerObj.put(\"pair_name\",termArray.getJSONObject(x).getString(\"symbol\").toLowerCase());\r\n                            headerObj.put(\"pair_id\",termArray.getJSONObject(x).getString(\"id\"));\r\n                            tabsHeaderKeys.add(headerObj);\r\n                        }\r\n                        initView();\r\n                        if(jsonObject.getBoolean(\"status\")) {\r\n                            try {\r\n                                mainActivity.savePreferences.savePreferencesData(mainActivity, jsonObject.getString(\"kyc_status\"), DefaultConstants.kyc_status);\r\n\r\n                                String appversion = jsonObject.getString(\"app_version\");\r\n                                if(jsonObject.has(\"token\"))\r\n                                 {\r\n                                    mainActivity.savePreferences.savePreferencesData(mainActivity, jsonObject.getString(\"token\"), DefaultConstants.token);\r\n                                    mainActivity.savePreferences.savePreferencesData(mainActivity, jsonObject.getString(\"r_token\"), DefaultConstants.r_token);\r\n                                 }\r\n\r\n                                for(int x=0;x<tabsHeaderKeys.size();x++)\r\n                                 {\r\n                                    JSONObject dataObj=tabsHeaderKeys.get(x);\r\n                                     String pairName=dataObj.getString(\"pair_name\");\r\n                                     commonMap.put(pairName, jsonObject.getJSONArray(pairName));\r\n\r\n                                 }\r\n                                if(mainActivity.getAppVersion().equalsIgnoreCase(appversion))\r\n                                  {\r\n                                    mainActivity.alertDialogs.alertDialog(mainActivity, getResources().getString(R.string.app_name), \"Please update app to new version.\", \"Ok\", \"\", new DialogCallBacks() {\r\n                                        @Override\r\n                                        public void getDialogEvent(String buttonPressed) {\r\n                                            if(buttonPressed.equalsIgnoreCase(\"ok\")) {\r\n                                                mainActivity.launchPlayStore(mainActivity, mainActivity.getPackageName());\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                 }\r\n                                tablayout();\r\n\r\n                                isNewVersionFound(jsonObject.getString(\"app_version\"));\r\n                            }\r\n                            catch (Exception e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                        } else {\r\n                            mainActivity.alertDialogs.alertDialog(mainActivity, getResources().getString(R.string.Response), jsonObject.getString(\"msg\"), getResources().getString(R.string.ok), \"\", new DialogCallBacks() {\r\n                                @Override\r\n                                public void getDialogEvent(String buttonPressed) {\r\n                                    mainActivity.unauthorizedAccess(jsonObject);\r\n                                }\r\n                            });\r\n\r\n                        }\r\n                    } catch (Exception e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onPause() {\r\n        super.onPause();\r\n        socketHandlers.socket.off(\"broadcast_sent_client\");\r\n    }\r\n\r\n    SocketHandlers socketHandlers;\r\n\r\n    private void getDataOfPairs()\r\n    {\r\n        socketHandlers = new SocketHandlers();\r\n        socketHandlers.createConnection();\r\n        socketHandlers.socket.off(\"broadcast_sent_client\");\r\n        socketHandlers.socket.on(\"broadcast_sent_client\", new Emitter.Listener() {\r\n            @Override\r\n            public void call(Object... args) {\r\n\r\n\r\n                if (getActivity() != null) {\r\n                    getActivity().runOnUiThread(new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                            try\r\n                             {\r\n                                JSONObject jsonObject = new JSONObject(args[0] + \"\");\r\n                                if(jsonObject.has(\"price_stats_app\"))\r\n                                    {\r\n\r\n                                    String pair_id = jsonObject.getString(\"pair_id\");\r\n                                    JSONObject price_stats = new JSONObject(jsonObject.getString(\"price_stats_app\"));\r\n\r\n                                    final String change = price_stats.getString(\"change\");\r\n                                    final String lastprice = price_stats.getString(\"lastprice\");\r\n                                    final String volume = price_stats.getString(\"volume\");\r\n\r\n\r\n                                     System.out.println(\"Data====>\"+change+\"==\"+pair_id);\r\n\r\n\r\n                                     if(commonMap.size()>0)\r\n                                      {\r\n                                          JSONObject data=tabsHeaderKeys.get(pagerselectedPos);\r\n                                         JSONArray dataAr = commonMap.get(data.getString(\"pair_name\"));\r\n                                         System.out.println(\"Data Ar==\"+dataAr);\r\n                                         for(int x = 0; x < dataAr.length(); x++)\r\n                                            {\r\n                                             JSONObject dataObj = dataAr.getJSONObject(x);\r\n                                             if(dataObj.getString(\"pair_id\").equalsIgnoreCase(pair_id))\r\n                                               {\r\n                                                   dataObj.remove(\"price\");\r\n                                                   dataObj.remove(\"volume\");\r\n                                                   dataObj.remove(\"change\");\r\n\r\n                                                   dataObj.put(\"price\", lastprice);\r\n                                                   dataObj.put(\"volume\", volume);\r\n                                                   dataObj.put(\"change\", change);\r\n\r\n                                                 System.out.println(\"Data after remove===\" + dataObj);\r\n                                                 dataAr.put(x, dataObj);\r\n                                               }\r\n                                            }\r\n                                         commonMap.put(data.getString(\"pair_name\"), dataAr);\r\n                                         marketAdapterMap.get(pagerselectedPos).notifyDataSetChanged();\r\n\r\n                                     }\r\n                                }\r\n\r\n                            } catch (Exception e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        getDataOfPairs();\r\n    }\r\n\r\n\r\n    private void isNewVersionFound(String appversion)\r\n    {\r\n\r\n        if (mainActivity.getAppVersionCode()!=Double.parseDouble(appversion))\r\n        {\r\n            mainActivity.alertDialogs.alertDialog(mainActivity, getResources().getString(R.string.app_name), \"Please update app to new version.\", \"Ok\", \"\", new DialogCallBacks() {\r\n                @Override\r\n                public void getDialogEvent(String buttonPressed)\r\n                {\r\n                    if(buttonPressed.equalsIgnoreCase(\"ok\")) {\r\n                        mainActivity.launchPlayStore(mainActivity, mainActivity.getPackageName());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/web/instafx/fragments/HomeFragment.java	(revision e33de994a08f2e2766736ff4c0c4068cd81689b3)
+++ app/src/main/java/com/web/instafx/fragments/HomeFragment.java	(date 1636721331736)
@@ -97,7 +97,8 @@
     }
 
     void tablayout() {
-        if (tabLayout != null) {
+        if (tabLayout != null)
+        {
             adapter = new CurrencyPagerAdapter(getActivity().getSupportFragmentManager(), tabLayout.getTabCount());
             viewPager.setAdapter(adapter);
             viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));
